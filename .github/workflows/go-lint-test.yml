---
name: Go-based application lint and test

on:
  workflow_call:
    inputs:
      golang_version:
        description: "Override Go version in go.mod"
        type: string
        required: false
        default: ""
      goprivate:
        description: "Go private packages prefix"
        type: string
        required: false
        default: "github.com/remerge"
      fetch_depth:
        default: 1
        type: string
        description: "Number of commits to fetch. 0 indicates all history for all branches and tags."
        required: false
      os:
        description: "OS version to run the workflow on. If not provided, defaults to 'ubuntu-latest'"
        type: string
        default: ubuntu-latest
        required: false
    secrets:
      ssh_key:
        description: |
          SSH key to use to build and test the model. The user of the key must have access to our other private
          repositories.
        required: true
      fake_google_service_account_json:
        description: |
          Google service account JSON to use while testing. It should be fake credentials, unless your tests are to
          be run against a real bucket.
        required: false

jobs:
  go-model-lint-test:
    runs-on: ${{ inputs.os }}
    name: Go Lint & Test
    env:
      GOPRIVATE: ${{ inputs.goprivate }}
      GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.fake_google_service_account_json }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ inputs.fetch_depth }}
      
      - name: Detect meaningful changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            run:
              # Match anything NOT in excluded patterns
              - '!**/*.md'
              - '!.git/**'
              - '!gha-creds*'
              - '!.deploy/**'
              - '!nomad.hcl'
              - '!*nomad.variables.hcl'
              - '**' # fallback â€” include everything else
      - name: Skip if only docs or irrelevant files changed
        if: steps.changes.outputs.run != 'true'
        run: |
          echo "No relevant changes detected. Skipping build."
          exit 0
      - name: Extract Go version from go.mod
        run: echo "GO_VERSION=$(grep '^go ' < go.mod | awk '{print $2}')" >> "$GITHUB_ENV"
      - name: Go modules cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Go tools cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/mkf/.tools
          key: ${{ runner.os }}-go-tools-${{ inputs.golang_version || env.GO_VERSION }}-${{ github.job }}
          restore-keys: |
            ${{ runner.os }}-go-tools-${{ inputs.golang_version || env.GO_VERSION }}-${{ github.job }}
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.golang_version || env.GO_VERSION }}
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.ssh_key }}

      - name: Configure Git identity
        run: |
          git config --global user.name "remerge-deploy"
          git config --global user.email "tech@remerge.io"

      - name: Update Git config
        run: |
          curl -L https://api.github.com/meta | jq -r '.ssh_keys | .[]' | sed -e 's/^/github.com /' >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Lint
        run: make lint
      - name: Test
        run: |
          make test-nocache
