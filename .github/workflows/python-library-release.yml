---
name: Python Library Release

on:
  workflow_call:
    inputs:
      python_version:
        description: "Python version to use. If not provided, will be extracted from pyproject.toml"
        type: string
        required: false
        default: ""
      branches:
        description: "Git branches eligible for release"
        type: string
        required: false
        default: "production"
      aws_bucket:
        description: "AWS bucket"
        type: string
        required: false
        default: "remerge-artifacts-v2"
      bucket_directory:
        description: "Directory in AWS bucket"
        type: string
        required: false
        default: "${{ github.repository }}/${{ github.head_ref || github.ref_name }}"
      pypi_aws_bucket:
        description: "AWS bucket for PyPi server"
        type: string
        required: false
        default: "remerge-pypi"
      pypi_bucket_directory:
        description: "Directory in AWS bucket for PyPi server"
        type: string
        required: false
        default: "${{ github.repository }}"
      os:
        description: "OS version to run the workflow on. If not provided, defaults to 'ubuntu-latest'"
        type: string
        default: ubuntu-latest
        required: false
    outputs:
      version:
        description: "The version of the library that got released"
        value: ${{ jobs.python-library-release.outputs.version }}
    secrets:
      ssh_key:
        description: |
          SSH key to use to build and test the model. The user of the key must have access to our other private
          repositories.
        required: true
      pypi_username:
        description: |
          Username to use to log in into our private PyPi server.
        required: true
      pypi_password:
        description: |
          Password to use to log in into our private PyPi server.
        required: true
      aws_key_id:
        description: "AWS Key ID"
        required: true
      aws_key_secret:
        description: "AWS Key Secret"
        required: true

jobs:
  python-library-release:
    if: ${{ contains(inputs.branches, github.head_ref || github.ref_name) }}
    runs-on: ${{ inputs.os }}
    env:
      REPONAME: ${{ github.event.repository.name }}
    outputs:
      version: ${{ steps.versionSet.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install 'poetry>=1.2,<1.3'
      - name: Extract Python version from pyproject.toml
        run: echo "PYTHON_VERSION=$(grep -E "^python\s?=" < pyproject.toml | awk '{print $3}' | sed -r 's/^"\^?\~?>?=?|<?=?|"$//g' | sed -r 's/,/ /' | awk '{print $1}')" >> "$GITHUB_ENV"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version || env.PYTHON_VERSION }}
          cache: "poetry"
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.ssh_key }}

      - name: Update Git config
        run: |
          curl -L https://api.github.com/meta | jq -r '.ssh_keys | .[]' | sed -e 's/^/github.com /' >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Configure pip to access our private PyPi repo
        run: |
          sudo /bin/bash -c "echo $'[global]\n\
          trusted-host = pypi.remerge.io\n\
                         pypi.org\n\
          \n\
          index-url = https://pypi.org/simple\n\
          extra-index-url = https://${{ secrets.pypi_username }}:${{ secrets.pypi_password }}@pypi.remerge.io/simple'\
          > /etc/pip.conf"
      - name: Configure Poetry to access our private PyPi repo
        run: |
          poetry config repositories.remerge https://pypi.remerge.io
          poetry config http-basic.remerge '${{ secrets.pypi_username }}' '${{ secrets.pypi_password }}'

      - run: poetry install

      - name: Build the artifact
        run: |
          make build

      - name: Configure Git identity
        run: |
          git config --global user.name "remerge-deploy"
          git config --global user.email "tech@remerge.io"
      - name: Add a tag
        run: |
          make tag
      - name: Set version output
        id: versionSet
        run: echo "version=$(make version)" >> "$GITHUB_OUTPUT"

      - name: Upload the artifact to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl private --follow-symlinks
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_key_secret}}
          AWS_S3_BUCKET: ${{ inputs.aws_bucket }}
          SOURCE_DIR: "./dist/"
          DEST_DIR: ${{ inputs.bucket_directory }}

      - name: Upload the artifact to S3 for PyPi
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl private --follow-symlinks
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_key_secret}}
          AWS_S3_BUCKET: ${{ inputs.pypi_aws_bucket }}
          SOURCE_DIR: "./dist/"
          DEST_DIR: ${{ inputs.pypi_bucket_directory }}
      - name: Trigger the PyPi server refresh
        run: |
          curl --fail https://${{ secrets.pypi_username }}:${{ secrets.pypi_password }}@pypi.remerge.io/_trigger_sync
