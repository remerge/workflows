---
name: Docker build and push to GCR

on:
  workflow_call:
    inputs:
      gcr_registry:
        type: string
        required: false
        default: "eu.gcr.io"
        description: "GCR registry https://cloud.google.com/container-registry/docs/pushing-and-pulling#add-registry"
      tags:
        type: string
        required: true
        description: "Docker image tags"
      labels:
        type: string
        required: true
        description: "Docker image labels"
      context:
        type: string
        required: false
        description: "Docker build context"
        default: .
      os:
        description: "OS version to run the workflow on. If not provided, defaults to 'ubuntu-latest'"
        type: string
        default: ubuntu-latest
        required: false
    secrets:
      service_account:
        required: true
        description: "GCP IAM service account for pushing docker image to GCR"
      deploy_user_ssh_key:
        required: true
        description: "Private key for deploy user to access private repos"

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  go-modules:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.deploy_user_ssh_key }}

      - name: Update Git config
        run: |
          curl -L https://api.github.com/meta | jq -r '.ssh_keys | .[]' | sed -e 's/^/github.com /' >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v6

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.gcr_registry }}
          username: _json_key
          password: ${{ secrets.service_account }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          push: true
          tags: ${{ inputs.tags }}
          labels: ${{ inputs.labels }}
          ssh: default
