---
name: Go app build

on:
  workflow_call:
    inputs:
      golang_version:
        description: "Override Go version in go.mod"
        type: string
        required: false
        default: ""
      goprivate:
        description: "Go private packages prefix"
        type: string
        required: false
        default: "github.com/remerge"
      branches:
        description: "Git branches eligible to build"
        type: string
        required: false
        default: "production"
      os:
        description: "OS version to run the workflow on. If not provided, defaults to 'ubuntu-latest'"
        type: string
        default: ubuntu-latest
        required: false
    outputs:
      artifact:
        description: "Binary output artifact"
        value: "${{ jobs.go-app.outputs.artifact }}"
    secrets:
      ssh_key:
        description: "SSH key to use"
        required: true

jobs:
  go-app:
    if: ${{ contains(inputs.branches, github.head_ref || github.ref_name) }}
    runs-on: ${{ inputs.os }}
    env:
      GOPRIVATE: ${{ inputs.goprivate }}
      REPONAME: ${{ github.event.repository.name }}
    outputs:
      artifact: "${{ github.event.repository.name }}.linux.amd64"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - run: echo "GO_VERSION=$(grep '^go ' < go.mod | awk '{print $2}')" >> "$GITHUB_ENV"
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.golang_version || env.GO_VERSION }}
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: "${{ secrets.ssh_key }}"

      - name: Update Git config
        run: |
          curl -L https://api.github.com/meta | jq -r '.ssh_keys | .[]' | sed -e 's/^/github.com /' >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - run: make dist
        env:
          CI_COMMIT: ${{ github.sha }}
          CI_REPO: ${{ env.REPONAME }}
          CI_NUM: ${{ github.run_id }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPONAME }}.linux.amd64
          path: .build/${{ env.REPONAME }}.linux.amd64
