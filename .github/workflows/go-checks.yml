---
# Runs common checks for Go package: lint (fmt, modules, static, shadowing),
# tests and race.

name: Go checks

on:
  workflow_call:
    inputs:
      golang_version:
        type: string
        required: false
        default: ""
        description: "Override Golang version in go.mod"
      goprivate:
        type: string
        required: false
        default: "github.com/remerge"
        description: "Set GOPRIVATE"
      no-race:
        type: boolean
        required: false
        default: false
        description: "Run race detector"
      lint-target:
        type: string
        required: false
        default: "lint"
        description: "Lint Make target"
      no-lint-gen:
        type: boolean
        required: false
        default: false
        description: "Do not run go generate lint"
      lint-gen-ruby-version:
        type: string
        required: false
        default: ""
        description: "Set ruby version to install for go generate"
      compose-file:
        type: string
        required: false
        default: docker-compose.yml
        description: "Docker-compose file to detect"
      compose-wait:
        type: number
        required: false
        default: 1
        description: "Seconds to wait after docker-compose initialised"
      no-compose:
        type: boolean
        required: false
        default: false
        description: "Do not run docker-compose even compose file is present"
      os:
        description: "OS version to run the workflow on. If not provided, defaults to 'ubuntu-latest'"
        type: string
        default: ubuntu-latest
        required: false
    secrets:
      ssh_key:
        description: "SSH key to use"
        required: false

env:
  GOPRIVATE: ${{ inputs.goprivate }}

jobs:
  go-test:
    name: "lint_and_test"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "GO_VERSION=$(grep '^go ' < go.mod | awk '{print $2}')" >> "$GITHUB_ENV"
      - name: go modules cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg
          key: ${{ runner.os }}-go-mod-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-${{ github.job }}-
      - name: go tools cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.tools
          key: ${{ runner.os }}-go-tools-${{ inputs.golang_version || env.GO_VERSION }}-${{ github.job }}
          restore-keys: |
            ${{ runner.os }}-go-tools-${{ inputs.golang_version || env.GO_VERSION }}-${{ github.job }}
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.golang_version || env.GO_VERSION }}
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: "${{ inputs.lint-gen-ruby-version }}"
        if: "${{ !inputs.no-lint-gen && inputs.lint-gen-ruby-version != '' }}"

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: "${{ secrets.ssh_key }}"
        if: "${{ inputs.goprivate != '' }}"

      - name: Update Git config
        run: |
          curl -L https://api.github.com/meta | jq -r '.ssh_keys | .[]' | sed -e 's/^/github.com /' >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"
        if: "${{ inputs.goprivate != '' }}"

      - run: make ${{ inputs.lint-target }}
      - run: make gen && git diff --exit-code --name-only HEAD
        if: "${{ !inputs.no-lint-gen }}"
      - run: 'docker compose -f "${{ inputs.compose-file }}" up -d --build && sleep ${{ inputs.compose-wait }}'
        if: "${{ !inputs.no-compose && hashFiles(inputs.compose-file) != '' }}"
      - run: make test-nocache
      - run: make race-nocache
        if: "${{ !inputs.no-race }}"
      - run: 'docker compose -f "${{ inputs.compose-file }}" down'
        if: "${{ always() && !inputs.no-compose && hashFiles(inputs.compose-file) != '' }}"
